name: Run Tests

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: obveznik_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:7.0
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment variables
      run: |
        echo "FLASK_APP=run.py" >> $GITHUB_ENV
        echo "FLASK_ENV=testing" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
        echo "DATABASE_URL=mysql+pymysql://root:testpassword@127.0.0.1:3306/obveznik_test" >> $GITHUB_ENV
        echo "REDIS_URL=redis://127.0.0.1:6379/0" >> $GITHUB_ENV

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h"127.0.0.1" -P3306 -uroot -ptestpassword --silent; then
            echo "MySQL is ready"
            break
          fi
          echo "Waiting for MySQL... ($i/30)"
          sleep 2
        done

    - name: Run tests with pytest
      run: |
        pytest --cov=app --cov-report=term --cov-report=html --cov-report=xml -v

    - name: Check coverage threshold
      run: |
        coverage report --fail-under=70

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: always()
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-obveznik
      continue-on-error: true
